-- Database: manajemen_perpustakaan
CREATE DATABASE manajemen_perpustakaan;
USE manajemen_perpustakaan;

-- Tabel Anggota
CREATE TABLE ANGGOTA (
    id_anggota VARCHAR(6) UNIQUE NOT NULL PRIMARY KEY,
    nama_anggota VARCHAR(225) NOT NULL,
    alamat VARCHAR(50) NOT NULL,
    nomor_telp VARCHAR(12) NOT NULL,
    email VARCHAR(89) NOT NULL UNIQUE,
    password VARCHAR(225) NOT NULL,
    jenis_anggota VARCHAR(10),
    status VARCHAR(10),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT CheckTabelAnggota1 CHECK (LENGTH(id_anggota) = 5),
    CONSTRAINT CheckTabelAnggota2 CHECK (id_anggota REGEXP "^AG[0-9]{3}$")
);

-- Tabel Petugas
CREATE TABLE PETUGAS (
    id_petugas VARCHAR(6) UNIQUE NOT NULL PRIMARY KEY,
    nama_petugas VARCHAR(225) NOT NULL,
    nomor_telp VARCHAR(12) NOT NULL,
    email VARCHAR(89) NOT NULL UNIQUE,
    password VARCHAR(225) NOT NULL,
    id_jabatan VARCHAR(6),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT CheckTabelPetugas1 CHECK (LENGTH(id_petugas) = 5),
    CONSTRAINT CheckTabelPetugas2 CHECK (id_petugas REGEXP "^PG[0-9]{3}$"),
    FOREIGN KEY (id_jabatan) REFERENCES JABATAN(id_jabatan) ON DELETE CASCADE
);

-- Tabel Jabatan
CREATE TABLE JABATAN (
    id_jabatan VARCHAR(6) UNIQUE NOT NULL PRIMARY KEY,
    nama_jabatan VARCHAR(225) NOT NULL,
    CONSTRAINT CheckTabelJabatan1 CHECK (LENGTH(id_jabatan) = 5),
    CONSTRAINT CheckTabelJabatan2 CHECK (id_jabatan REGEXP "^JB[0-9]{3}$")
);

-- Tabel Buku
CREATE TABLE BUKU (
    id_buku VARCHAR(6) UNIQUE NOT NULL PRIMARY KEY,
    nama_buku VARCHAR(225) NOT NULL,
    tahun_terbit DATE,
    stok INT,
    nama_penulis VARCHAR(100),
    nama_penerbit VARCHAR(100),
    id_kategori VARCHAR(6),
    kode_rak VARCHAR(6),
    status ENUM('TERSEDIA', 'DIPINJAM') NOT NULL DEFAULT 'TERSEDIA',
    CONSTRAINT CheckTabelBuku1 CHECK (LENGTH(id_buku) = 5),
    CONSTRAINT CheckTabelBuku2 CHECK (id_buku REGEXP "^BK[0-9]{3}$"),
    FOREIGN KEY (id_kategori) REFERENCES KATEGORI_BUKU(id_kategori) ON DELETE CASCADE,
    FOREIGN KEY (kode_rak) REFERENCES RAK_BUKU(kode_rak) ON DELETE CASCADE
);

-- Tabel Kategori Buku
CREATE TABLE KATEGORI_BUKU (
    id_kategori VARCHAR(6) UNIQUE NOT NULL PRIMARY KEY,
    nama_kategori VARCHAR(50),
    CONSTRAINT CheckTabelKategoriBuku1 CHECK (LENGTH(id_kategori) = 5),
    CONSTRAINT CheckTabelKategoriBuku2 CHECK (id_kategori REGEXP "^KB[0-9]{3}$")
);

-- Tabel Rak Buku
CREATE TABLE RAK_BUKU (
    kode_rak VARCHAR(6) UNIQUE NOT NULL PRIMARY KEY,
    nama_rak VARCHAR(30),
    lokasi VARCHAR(50),
    CONSTRAINT CheckTabelRakBuku1 CHECK (LENGTH(kode_rak) = 5),
    CONSTRAINT CheckTabelRakBuku2 CHECK (kode_rak REGEXP "^RB[0-9]{3}$")
);

-- Tabel Peminjaman
CREATE TABLE PEMINJAMAN (
    kode_pinjam VARCHAR(6) UNIQUE NOT NULL PRIMARY KEY,
    id_anggota VARCHAR(6),
    id_petugas VARCHAR(6),
    id_buku VARCHAR(6),
    tanggal_pinjam DATETIME DEFAULT CURRENT_TIMESTAMP,
    estimasi_pinjam DATETIME,
    status ENUM('DIPINJAM', 'TERLAMBAT', 'DIKEMBALIKAN') NOT NULL DEFAULT 'DIPINJAM',
    CONSTRAINT CheckTabelPeminjaman1 CHECK (LENGTH(kode_pinjam) = 5),
    CONSTRAINT CheckTabelPeminjaman2 CHECK (kode_pinjam REGEXP "^PJ[0-9]{3}$"),
    FOREIGN KEY (id_anggota) REFERENCES ANGGOTA(id_anggota) ON DELETE CASCADE,
    FOREIGN KEY (id_petugas) REFERENCES PETUGAS(id_petugas) ON DELETE CASCADE,
    FOREIGN KEY (id_buku) REFERENCES BUKU(id_buku) ON DELETE CASCADE
);

-- Tabel Pengembalian
CREATE TABLE PENGEMBALIAN (
    kode_pengembalian VARCHAR(6) UNIQUE NOT NULL PRIMARY KEY,
    tanggal_pengembalian DATETIME,
    kode_pinjam VARCHAR(6),
    kondisi_buku ENUM('bagus', 'rusak', 'hilang') NOT NULL DEFAULT 'bagus',
    denda DOUBLE(10,2),
    CONSTRAINT CheckTabelPengembalian1 CHECK (LENGTH(kode_pengembalian) = 5),
    CONSTRAINT CheckTabelPengembalian2 CHECK (kode_pengembalian REGEXP "^PB[0-9]{3}$"),
    FOREIGN KEY (kode_pinjam) REFERENCES PEMINJAMAN(kode_pinjam) ON DELETE CASCADE
);

-- Tabel Detail Peminjaman
CREATE TABLE DETAIL_PEMINJAMAN (
    id INT AUTO_INCREMENT PRIMARY KEY,
    kode_pinjam VARCHAR(6),
    id_buku VARCHAR(6),
    kondisi_buku_pinjam ENUM('bagus', 'rusak') NOT NULL DEFAULT 'bagus',
    FOREIGN KEY (kode_pinjam) REFERENCES PEMINJAMAN(kode_pinjam) ON DELETE CASCADE,
    FOREIGN KEY (id_buku) REFERENCES BUKU(id_buku) ON DELETE CASCADE
);

-- Tabel Password Resets
CREATE TABLE PASSWORD_RESETS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(100),
    otp VARCHAR(6),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expired_at TIMESTAMP,
    is_used BOOLEAN DEFAULT FALSE
);

-- Triggers for Buku
DELIMITER //
CREATE TRIGGER update_buku_status BEFORE UPDATE ON BUKU
FOR EACH ROW
BEGIN
    IF NEW.stok <= 0 THEN
        SET NEW.status = 'DIPINJAM';
    ELSE
        SET NEW.status = 'TERSEDIA';
    END IF;
END//
DELIMITER ;

DELIMITER //
CREATE TRIGGER before_detail_pinjam_insert BEFORE INSERT ON DETAIL_PEMINJAMAN
FOR EACH ROW
BEGIN
    UPDATE BUKU SET stok = stok - 1 WHERE id_buku = NEW.id_buku;
END//
DELIMITER ;